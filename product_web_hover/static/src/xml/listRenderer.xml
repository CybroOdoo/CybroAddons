<?xml version="1.0" encoding="UTF-8"?>
<templates xml:space="preserve">
    <!--
        This template inherits the `web.ListRenderer.RecordRow` template and adds
        some data attributes to the td tag that are required for the tooltip.
    -->
    <t t-inherit="web.ListRenderer.RecordRow" t-inherit-mode="extension">
            <td t-on-keydown.synthetic="(ev) => this.onCellKeydown(ev, group, record)"
                        class="o_data_cell cursor-pointer"
                        t-att-class="getCellClass(column, record)"
                        t-att-name="column.name"
                        t-att-colspan="column.colspan"
                        t-att-data-tooltip="!isInvisible ? getCellTitle(column, record) : false"
                        data-tooltip-delay="1000"
                        t-on-click="(ev) => this.onCellClicked(record, column, ev)" tabindex="-1" position="replace">
                <td t-on-keydown="(ev) => this.onCellKeydown(ev, group, record)"
                        class="o_data_cell cursor-pointer"
                        t-att-class="getCellClass(column, record)"
                        t-att-name="column.name"
                        t-att-colspan="column.colspan"
                        t-att-data-tooltip="!isInvisible ? getCellTitle(column, record) : false"
                        t-att-data-tooltip-info="checkModel(record, column) ? tolTipInfo(record, column): false"
                        t-att-data-tooltip-template="checkModel(record, column) ? 'product_web_hover.HoverTemplate' : false"
                        data-tooltip-delay="1000"
                        t-on-click="(ev) => this.onCellClicked(record, column, ev)" tabindex="-1">
                        <t t-if="!isInvisible">
                            <t t-if="canUseFormatter(column, record)" t-out="getFormattedValue(column, record)"/>
                             <Field t-else="" name="column.name" record="record" type="column.widget" class="getFieldClass(column)" fieldInfo="props.archInfo.fieldNodes[column.name]" setDirty="(isDirty) => this.setDirty(isDirty)" readonly="props.activeActions?.edit === false and !record.isNew"/>
                        </t>
                    </td>
            </td>
    </t>
</templates>
